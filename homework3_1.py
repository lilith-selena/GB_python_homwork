#1. Реализовать функцию, принимающую два числа (позиционные аргументы) и выполняющую их деление. Числа запрашивать
# у пользователя, предусмотреть обработку ситуации деления на ноль.
def f_del(arg1,arg2):
    global d
    try:
        d = arg1 / arg2
    except ZeroDivisionError:
        print('Ошибка! Деление на 0')
    return arg1, arg2, d
arg1 = int(input('введите делимое'))
arg2 = int(input('введите делитель'))
f_del(arg1, arg2)
print(d)

#2. Выполнить функцию, которая принимает несколько параметров, описывающих данные пользователя: имя, фамилия, год рождения,
# город проживания, email, телефон. Функция должна принимать параметры как именованные аргументы.
# Осуществить вывод данных о пользователе одной строкой.
def information(**dannie):
    dannie += dannie
    return dannie
dannie = (input('введите имя'), input ('введите фамилию'), input ('введите год рождения'), input('город проживания'), input('e_mail'), input('телефон'))
print(dannie)

#3. Реализовать функцию my_func(), которая принимает три позиционных аргумента и возвращает сумму наибольших двух аргументов.
def my_func(arg3, arg4, arg5):
    global sumMax
    sumMax = sum([arg3, arg4, arg5]) - min(arg3, arg4, arg5)
    return sumMax,

my_func(8, 5, 6)
print(sumMax)

#4. Программа принимает действительное положительное число x и целое отрицательное число y. Выполните возведение числа x в степень y.
# Задание реализуйте в виде функции my_func(x, y). При решении задания нужно обойтись без встроенной функции возведения числа в степень.
#Подсказка: попробуйте решить задачу двумя способами. Первый — возведение в степень с помощью оператора **.
# Второй — более сложная реализация без оператора **, предусматривающая использование цикла.
def my_func(x1, y1):
    global degree1
    if y1 < 0:
        degree1 = 1/(x1**abs(y1))
    else:
        degree1 = x1**y1
    return degree1
x1 = int(input("Введите число x: "))
y1 = int(input("Введите число y: "))
my_func(x1, y1)
print(degree1)

def my_func2(x2, y2):
    global degree2
    degree2 = x2
    counter = 1
    if y2 >= 0:
        for n in y2:
            degree2 *= degree2
            n += 1
            return degree2
    else:
        for counter in abs(y2)+1:
            degree2 *= (1/degree2)
            counter += 1
            return degree2
        return degree2
    return degree2
x2 = int(input("Введите число x: "))
y2 = int(input("Введите число y: "))
my_func2(x2, y2)
print(degree2)

#5. Программа запрашивает у пользователя строку чисел, разделённых пробелом.
# При нажатии Enter должна выводиться сумма чисел. Пользователь может продолжить ввод чисел,
# разделённых пробелом и снова нажать Enter. Сумма вновь введённых чисел будет добавляться к уже подсчитанной сумме.
#Но если вместо числа вводится специальный символ, выполнение программы завершается.
# Если специальный символ введён после нескольких чисел, то вначале нужно
# добавить сумму этих чисел к полученной ранее сумме и после этого завершить программу.
def adder(*nums):
    sum = 0
    Stop = False
    for n in nums:
        try:
            if n:
                sum += int(n)
        except ValueError:
            flag = True
    return sum, Stop

final_sum = 0

while True:
    numbers_string = input('Введите числа через пробел: ').split(' ')
    sum, stop_flag = calculate_sum (*numbers_string)
    final_sum += sum
    print(f'сумма {final_sum}')

    if stop_flag:
        break

#6. Реализовать функцию int_func(), принимающую слова из маленьких латинских букв и возвращающую их же,
# но с прописной первой буквой. Например, print(int_func(‘text’)) -> Text.
def int_func(*text):
    T = str(text).title()
    print(T)
    return T

A = input('напишите слово')
int_func(A)

#7. Продолжить работу над заданием. В программу должна попадать строка из слов, разделённых пробелом.
# Каждое слово состоит из латинских букв в нижнем регистре. Нужно сделать вывод исходной строки,
# но каждое слово должно начинаться с заглавной буквы. Используйте написанную ранее функцию int_func().
def int_func(*text):
    T = str(text).title()
stroka = []
for word in input('напишите несколько слов: ').split(' '):
    stroka.append(int_func(word))

print( f'{"".join(stroka)}')

