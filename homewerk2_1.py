#1. Создать список и заполнить его элементами различных типов данных.
# Реализовать скрипт проверки типа данных каждого элемента. Использовать функцию type() для проверки типа.
# Элементы списка можно не запрашивать у пользователя, а указать явно, в программе.
my_list=['строка', 5, 7.5, False, None, {'key':'value'}, ['это', "некий", "список"], (5, 6)]
LenList=len(my_list)
print(LenList)
i=0
while True:
    if i==(LenList-1):
        break
    i+=1
    print(type(my_list[i]))

#2. Для списка реализовать обмен значений соседних элементов. Значениями обмениваются элементы с индексами
# 0 и 1, 2 и 3 и т. д. При нечётном количестве элементов последний сохранить на своём месте.
# Для заполнения списка элементов нужно использовать функцию input().
MyList=list(input('введите числа через запятую').split(','))
MyListRevers=[]
i=0
for i in range(i, ((len(MyList)//2)*2), 2):
    var1 = MyList[i:(i+1)]
    var2 = MyList[(i+1):(i+2)]
    print( var1, var2)
    var1, var2 = var2, var1
    print(var1, var2)
    MyListRevers = MyListRevers + var1 +var2
print(MyListRevers)

#3. Пользователь вводит месяц в виде целого числа от 1 до 12. Сообщить, к какому времени года относится месяц
# (зима, весна, лето, осень). Напишите решения через list и dict.
season1={'1' :'зима', '2':'зима', '3':'весна', '4':'весна', '5':'весна', '6':'лето', '7':'лето', '8':'лето', '9':'осень', '10':'осень', '11':'осень', '12':'зима'}
month1 = input('Введите месяц числом')
print(season1[month1])

season2=['зима','зима', 'весна','весна','весна','лето','лето','лето','осень','осень','осень','зима']
month2 = input('введите месяц числом')
index=(int(month2)-1)
print(season2[index])



#4. Пользователь вводит строку из нескольких слов, разделённых пробелами. Вывести каждое слово с новой строки.
# Строки нужно пронумеровать. Если слово длинное, выводить только первые 10 букв в слове.
line=input('напишите простое предложение не менее чем из трех слов')
line1=line.split()
indelist = 1
for x in line1:
    print(indelist[:10], x)
    indelist+=1

#5. Реализовать структуру «Рейтинг», представляющую собой набор натуральных чисел, который не возрастает.
# У пользователя нужно запрашивать новый элемент рейтинга. Если в рейтинге существуют элементы с одинаковыми значениями,
# то новый элемент с тем же значением должен разместиться после них.
#Подсказка. Например, набор натуральных чисел: 7, 5, 3, 3, 2.
#Пользователь ввёл число 3. Результат: 7, 5, 3, 3, 3, 2.
#Пользователь ввёл число 8. Результат: 8, 7, 5, 3, 3, 2.
#Пользователь ввёл число 1. Результат: 7, 5, 3, 3, 2, 1.
#Набор натуральных чисел можно задать сразу в коде, например, my_list = [7, 5, 3, 3, 2].
reiting = list(input ('запишите натуральные числа'))
reiting.sort()
print(reiting)
reiting1 = input('напишите еще одно число')
reiting.append(reiting1)
reiting.sort()
print(reiting)

#6. * Реализовать структуру данных «Товары». Она должна представлять собой список кортежей.
# Каждый кортеж хранит информацию об отдельном товаре. В кортеже должно быть два элемента —
# номер товара и словарь с параметрами, то есть характеристиками товара: название, цена, количество, единица измерения.
# Структуру нужно сформировать программно, запросив все данные у пользователя.
#Пример готовой структуры:
#[
#(1, {“название”: “компьютер”, “цена”: 20000, “количество”: 5, “eд”: “шт.”}),
#(2, {“название”: “принтер”, “цена”: 6000, “количество”: 2, “eд”: “шт.”}),
#(3, {“название”: “сканер”, “цена”: 2000, “количество”: 7, “eд”: “шт.”})
#]

#Нужно собрать аналитику о товарах. Реализовать словарь, в котором каждый ключ — характеристика товара,
# например, название. Тогда значение — список значений-характеристик, например, список названий товаров.
#Пример:
#{
#“название”: [“компьютер”, “принтер”, “сканер”],
#“цена”: [20000, 6000, 2000],
#“количество”: [5, 2, 7],
#“ед”: [“шт.”]
#}
NumberOfProducts = int(input('ввадите калличество товаров в магазине'))
PriceList = {}
prise = ()
result =[]
k=1
while k <= NumberOfProducts:
        PriceList['название'] = input('название товара')
        PriceList['цена'] = input('цена товара')
        PriceList['количество']= input('количество товара')
        PriceList['ед'] = input('единица измерения')
        prise = (k, PriceList)
        result.append(prise)
        k+=1
        print(PriceList)
        print(result)
k = 0
result2 = {}
nuwprise = list(zip(*result)).pop(-1)
while k <= len(nuwprise):
        result2 += nuwprise[k:k+1, 1].item()
print(result2)
# в итоге задача пока не решена